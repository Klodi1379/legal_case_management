# Generated by Django 5.0.4 on 2025-04-25 23:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("documents", "0002_rename_upload_date_document_uploaded_at_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LLMModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Model Name")),
                (
                    "endpoint_url",
                    models.URLField(max_length=255, verbose_name="Endpoint URL"),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="API Key"
                    ),
                ),
                (
                    "max_tokens",
                    models.IntegerField(default=4096, verbose_name="Max Tokens"),
                ),
                (
                    "temperature",
                    models.FloatField(default=0.7, verbose_name="Temperature"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "LLM Model",
                "verbose_name_plural": "LLM Models",
            },
        ),
        migrations.CreateModel(
            name="VectorStore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Store Name")),
                (
                    "store_type",
                    models.CharField(
                        choices=[
                            ("chroma", "ChromaDB"),
                            ("pinecone", "Pinecone"),
                            ("mock", "Mock Store"),
                        ],
                        default="chroma",
                        max_length=50,
                        verbose_name="Store Type",
                    ),
                ),
                (
                    "connection_string",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Connection String",
                    ),
                ),
                (
                    "dimensions",
                    models.IntegerField(default=768, verbose_name="Dimensions"),
                ),
                (
                    "embedding_model",
                    models.CharField(
                        default="gemma-3-12b-it-qat",
                        max_length=100,
                        verbose_name="Embedding Model",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "Vector Store",
                "verbose_name_plural": "Vector Stores",
            },
        ),
        migrations.CreateModel(
            name="AnalysisRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "request_type",
                    models.CharField(
                        choices=[
                            ("summary", "Summary"),
                            ("key_points", "Key Points"),
                            ("legal_analysis", "Legal Analysis"),
                            ("precedent_search", "Precedent Search"),
                        ],
                        max_length=50,
                        verbose_name="Request Type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Completed At"
                    ),
                ),
                (
                    "result",
                    models.TextField(blank=True, null=True, verbose_name="Result"),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Error Message"
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_requests",
                        to="documents.document",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Analysis Request",
                "verbose_name_plural": "Analysis Requests",
                "ordering": ["-created_at"],
            },
        ),
    ]
